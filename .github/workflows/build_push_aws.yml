name: Build and Push Docker Image to AWS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      REPO_NAME: ${{ github.event.repository.name }}
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::${{secrets.AWS_ACCOUNT_ID}}:role/github_action
        aws-region: ${{secrets.AWS_REGION}}

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Create ECR repository if it doesn't exist
      run: |
        if ! aws ecr describe-repositories --repository-names ${{env.REPO_NAME}} --region ${{secrets.AWS_REGION}}; then
          aws ecr create-repository --repository-name ${{env.REPO_NAME}} --region ${{secrets.AWS_REGION}}
        fi

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{steps.login-ecr.outputs.registry}}
        
      run: |
        docker build --build-arg OPENAI_API_KEY=${{secrets.OPENAI_API_KEY}} \
        --build-arg GTB_ACCESS_TOKEN=${{secrets.GTB_ACCESS_TOKEN}} \
        --build-arg AWS_REGION=${{secrets.AWS_REGION}} \
        --build-arg AMAZON_ACCESS_KEY=${{secrets.AMAZON_ACCESS_KEY}} \
        --build-arg AMAZON_SECRET_ACCESS_KEY=${{secrets.AMAZON_SECRET_ACCESS_KEY}} \
        -t $ECR_REGISTRY/${{env.REPO_NAME}} ./my_langserve
        docker push $ECR_REGISTRY/${{env.REPO_NAME}}

    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{secrets.AMAZON_HOST}}
        username: ${{secrets.AMAZON_USER}}
        key: ${{secrets.AMAZON_PEM}}
        script: |
          ECR_REGISTRY="${{ steps.login-ecr.outputs.registry }}"
          REPO_NAME="${{ env.REPO_NAME }}"
          AWS_ACCESS_KEY_ID="${{ secrets.AMAZON_ACCESS_KEY }}"
          AWS_SECRET_ACCESS_KEY="${{ secrets.AMAZON_SECRET_ACCESS_KEY }}"
          AWS_REGION="${{ secrets.AWS_REGION }}"
          echo "Installing AWS CLI..."
          sudo apt-get update
          sudo apt-get install awscli -y
          echo "Logging into Docker ECR..."
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY

          echo "Pulling image $ECR_REGISTRY/$REPO_NAME..."
          docker pull $ECR_REGISTRY/$REPO_NAME

          docker stop mycontainer || true
          docker run -d -p 8000:8000 -p 9001:9001 -v /config_cf.yaml:/config_cf.yaml \
          --log-driver=awslogs \
          --log-opt awslogs-group=mycontainer \
          --log-opt awslogs-region=$AWS_REGION \
          --log-opt awslogs-stream-prefix=docker \
          --name mycontainer $ECR_REGISTRY/$REPO_NAME

